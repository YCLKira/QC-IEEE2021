#Setting the working directory
setwd(".\\Images")
#Import the required packages
library(raster)
library(rgdal)
library(RColorBrewer)
library(EBImage)
#Setting the color palette (Yellow-Green) for spplot
my.palette <- brewer.pal(n = 8, name = "YlGn")
#Plotting the NDVI graphs with the same program for different country parks
ndvianalysis <- function(droneimage, countrypark){
#Cropping the imported image(The black borders of the image product)
cropped <- readImage(droneimage)[150:3450, 190:2360,]
#Importing the near-infrared (NIR) band of the drone image of the country park
NIR = raster(cropped, band = 1)
#Importing the red (r) band of the drone image of country park
red = raster(cropped, band = 2)
#Calculating the NDVI value of each pixel in the drone image
ndvi = (NIR-red)/(NIR+red)
#Filtering out the rock, sand and water
ndvi[ndvi < 0.2] = NA
#Plotting the NDVI frequency graph
hist(ndvi, main= countrypark)
#Plotting the NDVI graphs
plot(ndvi, main = countrypark)
#Plotting the NDVI graphs(spplot)
print(spplot(ndvi, main = countrypark, col.regions = my.palette, cuts = 7))
return(summary(ndvi)[3])
}
#Setting an empty vector for storing median NDVI values later
medians = vector(mode = "numeric", length = 7)
#Setting vectors for the park names and the file names to be used for NDVI calculation
parknames = c("Aberdeen","Tai Tam", "Pok Fu Lam", "Shek O", "Lung Fu Shan", "Clear Water Bay", "Kam Shan", "Lion Rock", "Pat Sin Leng", "Plover Cove", "Tai Lam Chung", "Lantau Peak", "Sunset Peak")
filename = paste(parknames, ".jpg", sep = "")
#Calculating the median NDVI values of different countryparks
for (x in 1:13){
medians[x] = ndvianalysis(filename[x], parknames[x])
}
"Aberdeen.jpg"
readImage("Aberdeen.jpg")
#Plotting the NDVI graphs with the same program for different country parks
ndvianalysis <- function(droneimage, countrypark){
#Importing the near-infrared (NIR) band of the drone image of the country park
NIR = raster(droneimage, band = 1)[150:3450, 190:2360, ]
#Importing the red (r) band of the drone image of country park
red = raster(droneimage, band = 2)[150:3450, 190:2360, ]
#Calculating the NDVI value of each pixel in the drone image
ndvi = (NIR-red)/(NIR+red)
#Filtering out the rock, sand and water
ndvi[ndvi < 0.2] = NA
#Plotting the NDVI frequency graph
hist(ndvi, main= countrypark)
#Plotting the NDVI graphs
plot(ndvi, main = countrypark)
#Plotting the NDVI graphs(spplot)
print(spplot(ndvi, main = countrypark, col.regions = my.palette, cuts = 7))
return(summary(ndvi)[3])
}
#Setting an empty vector for storing median NDVI values later
medians = vector(mode = "numeric", length = 7)
#Setting vectors for the park names and the file names to be used for NDVI calculation
parknames = c("Aberdeen","Tai Tam", "Pok Fu Lam", "Shek O", "Lung Fu Shan", "Clear Water Bay", "Kam Shan", "Lion Rock", "Pat Sin Leng", "Plover Cove", "Tai Lam Chung", "Lantau Peak", "Sunset Peak")
filename = paste(parknames, ".jpg", sep = "")
#Calculating the median NDVI values of different countryparks
for (x in 1:13){
medians[x] = ndvianalysis(filename[x], parknames[x])
}
?crop
#Plotting the NDVI graphs with the same program for different country parks
ndvianalysis <- function(droneimage, countrypark){
#Importing the near-infrared (NIR) band of the drone image of the country park
NIR = raster(readImage(droneimage)[150:3450, 190:2360, ], band = 1)
#Importing the red (r) band of the drone image of country park
red = raster(readImage(droneimage)[150:3450, 190:2360, ], band = 2)
#Calculating the NDVI value of each pixel in the drone image
ndvi = (NIR-red)/(NIR+red)
#Filtering out the rock, sand and water
ndvi[ndvi < 0.2] = NA
#Plotting the NDVI frequency graph
hist(ndvi, main= countrypark)
#Plotting the NDVI graphs
plot(ndvi, main = countrypark)
#Plotting the NDVI graphs(spplot)
print(spplot(ndvi, main = countrypark, col.regions = my.palette, cuts = 7))
return(summary(ndvi)[3])
}
#Setting an empty vector for storing median NDVI values later
medians = vector(mode = "numeric", length = 7)
#Setting vectors for the park names and the file names to be used for NDVI calculation
parknames = c("Aberdeen","Tai Tam", "Pok Fu Lam", "Shek O", "Lung Fu Shan", "Clear Water Bay", "Kam Shan", "Lion Rock", "Pat Sin Leng", "Plover Cove", "Tai Lam Chung", "Lantau Peak", "Sunset Peak")
filename = paste(parknames, ".jpg", sep = "")
#Calculating the median NDVI values of different countryparks
for (x in 1:13){
medians[x] = ndvianalysis(filename[x], parknames[x])
}
#Plotting the NDVI graphs with the same program for different country parks
ndvianalysis <- function(droneimage, countrypark){
#Importing the near-infrared (NIR) band of the drone image of the country park
NIR = raster(droneimage, band = 1)
#Importing the red (r) band of the drone image of country park
red = raster(droneimage, band = 2)
#Calculating the NDVI value of each pixel in the drone image
ndvi = (NIR-red)/(NIR+red)
#Filtering out the rock, sand and water
ndvi[ndvi < 0.2] = NA
#Plotting the NDVI frequency graph
hist(ndvi, main= countrypark)
#Plotting the NDVI graphs
plot(ndvi, main = countrypark)
#Plotting the NDVI graphs(spplot)
print(spplot(ndvi, main = countrypark, col.regions = my.palette, cuts = 7))
return(summary(ndvi)[3])
}
#Setting an empty vector for storing median NDVI values later
medians = vector(mode = "numeric", length = 7)
#Setting vectors for the park names and the file names to be used for NDVI calculation
parknames = c("Aberdeen","Tai Tam", "Pok Fu Lam", "Shek O", "Lung Fu Shan", "Clear Water Bay", "Kam Shan", "Lion Rock", "Pat Sin Leng", "Plover Cove", "Tai Lam Chung", "Lantau Peak", "Sunset Peak")
filename = paste(parknames, ".jpg", sep = "")
#Setting the working directory
setwd(".\\Photos")
#Import the required packages
library(raster)
library(rgdal)
library(RColorBrewer)
library(EBImage)
